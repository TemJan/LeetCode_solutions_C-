class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) 
    {
        bool flage = true;
        for(int i = 0; i < intervals.size(); ++i)
        {
            if(intervals[i][0] > newInterval[0])
            {
                intervals.insert(intervals.begin()+i,newInterval),flage = false;
                break;
            }
        }
        if(flage)
            intervals.push_back(newInterval);
        std::vector<std::vector<int>> answer;
        for(auto elem: intervals)
        {
            if(answer.empty() or answer.back()[1] < elem[0])
                answer.push_back(elem);
            else
                answer.back()[1] = std::max(answer.back()[1],elem[1]);
        }
        return answer;
    }
};