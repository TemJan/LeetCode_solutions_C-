/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) 
    {
        if(!head or !head->next) 
            return head;
        ListNode* left = head;
        ListNode* right = head->next;
        head = head->next;
        ListNode* temp = nullptr;
        while(right and right->next)
        {
            if(temp)
                temp->next = right;
            left->next = right->next;
            right->next = left;
            temp = left;
            left = left->next;
            right = left->next;
        }
        if(!right)
            return head;
        if(temp)
            temp->next = right;
        left->next = nullptr;
        right->next = left;
        return head;
    }
};