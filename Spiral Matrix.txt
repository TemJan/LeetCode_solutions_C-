class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) 
    {
        vector<int> arr;
        for(int i = 0; i < std::min(matrix.size(),matrix[0].size())/2; ++i)
        {
            for(int j = i; j < matrix[0].size() - 1 - i; ++j)
                arr.push_back(matrix[i][j]);
            for(int j = i; j < matrix.size() - 1 - i; ++j)
                arr.push_back(matrix[j][matrix[0].size() - 1 - i]);
            for(int j = matrix[0].size() - 1 - i; j > i; --j)
                arr.push_back(matrix[matrix.size() - 1 - i][j]);
            for(int j = matrix.size() - 1 - i; j > i; --j)
                arr.push_back(matrix[j][i]);
        }
        if(matrix.size()%2 and matrix.size() <= matrix[0].size())
            for(int j = matrix.size()/2, i = 0; i < (matrix[0].size() - matrix.size()) + 1; ++i, ++j)
                arr.push_back(matrix[matrix.size()/2][j]);

        else if(matrix[0].size()%2 and matrix.size() > matrix[0].size())
            for(int j = matrix[0].size()/2, i = 0; i < (matrix.size() - matrix[0].size()) + 1; ++i, ++j)
                arr.push_back(matrix[j][matrix[0].size()/2]);
        
        return arr;
    }
};